   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.set_key,"ax",%progbits
  16              		.align	1
  17              		.global	set_key
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	set_key:
  25              	.LVL0:
  26              	.LFB3:
  27              		.file 1 "main.c"
   1:main.c        **** #include <stdint.h>
   2:main.c        **** #include <stdlib.h>
   3:main.c        **** #include "hal.h"
   4:main.c        **** #include "simpleserial.h"
   5:main.c        **** 
   6:main.c        **** #define QINV -3327 // q^-1 mod 2^16
   7:main.c        **** #define KYBER_Q 3329
   8:main.c        **** 
   9:main.c        **** int16_t a[2] = {0, 0};
  10:main.c        **** //typedef signed char int8_t;
  11:main.c        **** //typedef signed short int int16_t;
  12:main.c        **** //typedef signed int int32_t;
  13:main.c        **** 
  14:main.c        **** int16_t montgomery_reduce(int32_t a)
  15:main.c        **** {
  16:main.c        ****     int16_t t;
  17:main.c        **** 
  18:main.c        ****     t = (int16_t)a*QINV;
  19:main.c        ****     t = (a - (int32_t)t*KYBER_Q) >> 16;
  20:main.c        ****     return t;
  21:main.c        **** }
  22:main.c        **** 
  23:main.c        **** static int16_t fqmul(int16_t a, int16_t b) {
  24:main.c        ****     return montgomery_reduce((int32_t)a*b);
  25:main.c        **** }
  26:main.c        **** 
  27:main.c        **** void basemul(int16_t r[2], const int16_t a[2], const int16_t b[2], int16_t zeta)
  28:main.c        **** {
  29:main.c        ****     // trigger_high();
  30:main.c        ****     r[0]  = fqmul(a[1], b[1]);
  31:main.c        ****     // trigger_low();
  32:main.c        ****     r[0]  = fqmul(r[0], zeta);
  33:main.c        ****     r[0] += fqmul(a[0], b[0]);
  34:main.c        ****     r[1]  = fqmul(a[0], b[1]);
  35:main.c        ****     r[1] += fqmul(a[1], b[0]);
  36:main.c        **** }
  37:main.c        **** 
  38:main.c        **** uint8_t set_key(uint8_t* text_in_buf, uint8_t len)
  39:main.c        **** {
  28              		.loc 1 39 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  40:main.c        ****     uint8_t temp[4] = {0,};
  32              		.loc 1 40 5 view .LVU1
  41:main.c        ****     a[0] = (((int16_t)text_in_buf[0]) << 8) + ((int16_t)(text_in_buf[1]));
  33              		.loc 1 41 5 view .LVU2
  39:main.c        ****     uint8_t temp[4] = {0,};
  34              		.loc 1 39 1 is_stmt 0 view .LVU3
  35 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 41 34 view .LVU4
  42 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  43              		.loc 1 41 69 view .LVU5
  44 0004 4478     		ldrb	r4, [r0, #1]	@ zero_extendqisi2
  42:main.c        ****     a[1] = (((int16_t)text_in_buf[2]) << 8) + ((int16_t)(text_in_buf[3]));
  45              		.loc 1 42 69 view .LVU6
  46 0006 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  41:main.c        ****     a[0] = (((int16_t)text_in_buf[0]) << 8) + ((int16_t)(text_in_buf[1]));
  47              		.loc 1 41 10 view .LVU7
  48 0008 0D4D     		ldr	r5, .L2
  41:main.c        ****     a[0] = (((int16_t)text_in_buf[0]) << 8) + ((int16_t)(text_in_buf[1]));
  49              		.loc 1 41 45 view .LVU8
  50 000a 04EB0324 		add	r4, r4, r3, lsl #8
  51              		.loc 1 42 34 view .LVU9
  52 000e 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  43:main.c        ****     temp[1] = (uint8_t)a[0]&0xFF;
  53              		.loc 1 43 15 view .LVU10
  54 0010 8DF80540 		strb	r4, [sp, #5]
  41:main.c        ****     a[1] = (((int16_t)text_in_buf[2]) << 8) + ((int16_t)(text_in_buf[3]));
  55              		.loc 1 41 45 view .LVU11
  56 0014 21B2     		sxth	r1, r4
  57              	.LVL1:
  42:main.c        ****     a[1] = (((int16_t)text_in_buf[2]) << 8) + ((int16_t)(text_in_buf[3]));
  58              		.loc 1 42 45 view .LVU12
  59 0016 02EB0322 		add	r2, r2, r3, lsl #8
  41:main.c        ****     a[1] = (((int16_t)text_in_buf[2]) << 8) + ((int16_t)(text_in_buf[3]));
  60              		.loc 1 41 10 view .LVU13
  61 001a 2980     		strh	r1, [r5]	@ movhi
  42:main.c        ****     a[1] = (((int16_t)text_in_buf[2]) << 8) + ((int16_t)(text_in_buf[3]));
  62              		.loc 1 42 5 is_stmt 1 view .LVU14
  42:main.c        ****     a[1] = (((int16_t)text_in_buf[2]) << 8) + ((int16_t)(text_in_buf[3]));
  63              		.loc 1 42 45 is_stmt 0 view .LVU15
  64 001c 13B2     		sxth	r3, r2
  44:main.c        ****     temp[0] = (uint8_t)(a[0] >> 8) & 0xFF;
  65              		.loc 1 44 15 view .LVU16
  66 001e 0912     		asrs	r1, r1, #8
  42:main.c        ****     temp[1] = (uint8_t)a[0]&0xFF;
  67              		.loc 1 42 10 view .LVU17
  68 0020 6B80     		strh	r3, [r5, #2]	@ movhi
  43:main.c        ****     temp[0] = (uint8_t)(a[0] >> 8) & 0xFF;
  69              		.loc 1 43 5 is_stmt 1 view .LVU18
  70              		.loc 1 44 5 view .LVU19
  71              		.loc 1 44 15 is_stmt 0 view .LVU20
  72 0022 8DF80410 		strb	r1, [sp, #4]
  45:main.c        ****     temp[3] = (uint8_t)a[1]&0xFF;
  73              		.loc 1 45 5 is_stmt 1 view .LVU21
  74              		.loc 1 45 15 is_stmt 0 view .LVU22
  75 0026 8DF80720 		strb	r2, [sp, #7]
  46:main.c        ****     temp[2] = (uint8_t)(a[1] >> 8) & 0xFF;
  76              		.loc 1 46 5 is_stmt 1 view .LVU23
  77              		.loc 1 46 15 is_stmt 0 view .LVU24
  78 002a 1B12     		asrs	r3, r3, #8
  47:main.c        ****     simpleserial_put('r', 4, temp);
  79              		.loc 1 47 5 view .LVU25
  80 002c 01AA     		add	r2, sp, #4
  81 002e 0421     		movs	r1, #4
  82 0030 7220     		movs	r0, #114
  83              	.LVL2:
  46:main.c        ****     temp[2] = (uint8_t)(a[1] >> 8) & 0xFF;
  84              		.loc 1 46 15 view .LVU26
  85 0032 8DF80630 		strb	r3, [sp, #6]
  86              		.loc 1 47 5 is_stmt 1 view .LVU27
  87 0036 FFF7FEFF 		bl	simpleserial_put
  88              	.LVL3:
  48:main.c        **** 
  49:main.c        **** 	return 0x00;
  89              		.loc 1 49 2 view .LVU28
  50:main.c        **** }
  90              		.loc 1 50 1 is_stmt 0 view .LVU29
  91 003a 0020     		movs	r0, #0
  92 003c 03B0     		add	sp, sp, #12
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 12
  95              		@ sp needed
  96 003e 30BD     		pop	{r4, r5, pc}
  97              	.L3:
  98              		.align	2
  99              	.L2:
 100 0040 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE3:
 104              		.section	.text.check_key,"ax",%progbits
 105              		.align	1
 106              		.global	check_key
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu softvfp
 112              	check_key:
 113              	.LVL4:
 114              	.LFB4:
  51:main.c        **** 
  52:main.c        **** uint8_t check_key(uint8_t* text_in_buf, uint8_t len)
  53:main.c        **** {
 115              		.loc 1 53 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 0, uses_anonymous_args = 0
  54:main.c        ****     uint8_t temp[4];
 119              		.loc 1 54 5 view .LVU31
  55:main.c        ****     temp[1] = (uint8_t)a[0]&0xFF;
 120              		.loc 1 55 5 view .LVU32
  53:main.c        ****     uint8_t temp[4];
 121              		.loc 1 53 1 is_stmt 0 view .LVU33
 122 0000 07B5     		push	{r0, r1, r2, lr}
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 14, -4
 126              		.loc 1 55 25 view .LVU34
 127 0002 0C4A     		ldr	r2, .L5
 128 0004 B2F90030 		ldrsh	r3, [r2]
 129              		.loc 1 55 15 view .LVU35
 130 0008 8DF80530 		strb	r3, [sp, #5]
  56:main.c        ****     temp[0] = (uint8_t)(a[0] >> 8) & 0xFF;
 131              		.loc 1 56 5 is_stmt 1 view .LVU36
 132              		.loc 1 56 15 is_stmt 0 view .LVU37
 133 000c 1B12     		asrs	r3, r3, #8
 134 000e 8DF80430 		strb	r3, [sp, #4]
  57:main.c        ****     temp[3] = (uint8_t)a[1]&0xFF;
 135              		.loc 1 57 5 is_stmt 1 view .LVU38
 136              		.loc 1 57 25 is_stmt 0 view .LVU39
 137 0012 B2F90230 		ldrsh	r3, [r2, #2]
 138              		.loc 1 57 15 view .LVU40
 139 0016 8DF80730 		strb	r3, [sp, #7]
  58:main.c        ****     temp[2] = (uint8_t)(a[1] >> 8) & 0xFF;
 140              		.loc 1 58 5 is_stmt 1 view .LVU41
  59:main.c        ****     simpleserial_put('r', 4, temp);
 141              		.loc 1 59 5 is_stmt 0 view .LVU42
 142 001a 01AA     		add	r2, sp, #4
  58:main.c        ****     temp[2] = (uint8_t)(a[1] >> 8) & 0xFF;
 143              		.loc 1 58 15 view .LVU43
 144 001c 1B12     		asrs	r3, r3, #8
 145              		.loc 1 59 5 view .LVU44
 146 001e 0421     		movs	r1, #4
 147              	.LVL5:
 148              		.loc 1 59 5 view .LVU45
 149 0020 7220     		movs	r0, #114
 150              	.LVL6:
  58:main.c        ****     temp[2] = (uint8_t)(a[1] >> 8) & 0xFF;
 151              		.loc 1 58 15 view .LVU46
 152 0022 8DF80630 		strb	r3, [sp, #6]
 153              		.loc 1 59 5 is_stmt 1 view .LVU47
 154 0026 FFF7FEFF 		bl	simpleserial_put
 155              	.LVL7:
  60:main.c        **** 
  61:main.c        **** 	return 0x00;
 156              		.loc 1 61 2 view .LVU48
  62:main.c        **** }
 157              		.loc 1 62 1 is_stmt 0 view .LVU49
 158 002a 0020     		movs	r0, #0
 159 002c 03B0     		add	sp, sp, #12
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 4
 162              		@ sp needed
 163 002e 5DF804FB 		ldr	pc, [sp], #4
 164              	.L6:
 165 0032 00BF     		.align	2
 166              	.L5:
 167 0034 00000000 		.word	.LANCHOR0
 168              		.cfi_endproc
 169              	.LFE4:
 171              		.section	.text.montgomery_reduce,"ax",%progbits
 172              		.align	1
 173              		.global	montgomery_reduce
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu softvfp
 179              	montgomery_reduce:
 180              	.LVL8:
 181              	.LFB0:
  15:main.c        ****     int16_t t;
 182              		.loc 1 15 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
  16:main.c        **** 
 187              		.loc 1 16 5 view .LVU51
  18:main.c        ****     t = (a - (int32_t)t*KYBER_Q) >> 16;
 188              		.loc 1 18 5 view .LVU52
  19:main.c        ****     return t;
 189              		.loc 1 19 5 view .LVU53
  18:main.c        ****     t = (a - (int32_t)t*KYBER_Q) >> 16;
 190              		.loc 1 18 19 is_stmt 0 view .LVU54
 191 0000 00EB4003 		add	r3, r0, r0, lsl #1
 192 0004 03EBC303 		add	r3, r3, r3, lsl #3
 193 0008 03EBC303 		add	r3, r3, r3, lsl #3
 194 000c 00EB0323 		add	r3, r0, r3, lsl #8
  19:main.c        ****     return t;
 195              		.loc 1 19 12 view .LVU55
 196 0010 4FF2FF22 		movw	r2, #62207
 197 0014 13FB0200 		smlabb	r0, r3, r2, r0
 198              	.LVL9:
  20:main.c        **** }
 199              		.loc 1 20 5 is_stmt 1 view .LVU56
  21:main.c        **** 
 200              		.loc 1 21 1 is_stmt 0 view .LVU57
 201 0018 0014     		asrs	r0, r0, #16
 202              	.LVL10:
  21:main.c        **** 
 203              		.loc 1 21 1 view .LVU58
 204 001a 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE0:
 208              		.section	.text.basemul,"ax",%progbits
 209              		.align	1
 210              		.global	basemul
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	basemul:
 217              	.LVL11:
 218              	.LFB2:
  28:main.c        ****     // trigger_high();
 219              		.loc 1 28 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
  30:main.c        ****     // trigger_low();
 223              		.loc 1 30 5 view .LVU60
 224              	.LBB12:
 225              	.LBI12:
  23:main.c        ****     return montgomery_reduce((int32_t)a*b);
 226              		.loc 1 23 16 view .LVU61
 227              	.LBB13:
  24:main.c        **** }
 228              		.loc 1 24 5 view .LVU62
 229              	.LBE13:
 230              	.LBE12:
  28:main.c        ****     // trigger_high();
 231              		.loc 1 28 1 is_stmt 0 view .LVU63
 232 0000 70B5     		push	{r4, r5, r6, lr}
 233              	.LCFI4:
 234              		.cfi_def_cfa_offset 16
 235              		.cfi_offset 4, -16
 236              		.cfi_offset 5, -12
 237              		.cfi_offset 6, -8
 238              		.cfi_offset 14, -4
  28:main.c        ****     // trigger_high();
 239              		.loc 1 28 1 view .LVU64
 240 0002 0446     		mov	r4, r0
 241 0004 1D46     		mov	r5, r3
 242              	.LBB16:
 243              	.LBB14:
  24:main.c        **** }
 244              		.loc 1 24 12 view .LVU65
 245 0006 4888     		ldrh	r0, [r1, #2]
 246              	.LVL12:
  24:main.c        **** }
 247              		.loc 1 24 12 view .LVU66
 248 0008 5388     		ldrh	r3, [r2, #2]
 249              	.LVL13:
  24:main.c        **** }
 250              		.loc 1 24 12 view .LVU67
 251 000a 10FB03F0 		smulbb	r0, r0, r3
 252              	.LBE14:
 253              	.LBE16:
  28:main.c        ****     // trigger_high();
 254              		.loc 1 28 1 view .LVU68
 255 000e 1646     		mov	r6, r2
 256              	.LBB17:
 257              	.LBB15:
  24:main.c        **** }
 258              		.loc 1 24 12 view .LVU69
 259 0010 FFF7FEFF 		bl	montgomery_reduce
 260              	.LVL14:
  24:main.c        **** }
 261              		.loc 1 24 12 view .LVU70
 262              	.LBE15:
 263              	.LBE17:
  32:main.c        ****     r[0] += fqmul(a[0], b[0]);
 264              		.loc 1 32 5 is_stmt 1 view .LVU71
 265              	.LBB18:
 266              	.LBI18:
  23:main.c        ****     return montgomery_reduce((int32_t)a*b);
 267              		.loc 1 23 16 view .LVU72
 268              	.LBB19:
  24:main.c        **** }
 269              		.loc 1 24 5 view .LVU73
  24:main.c        **** }
 270              		.loc 1 24 12 is_stmt 0 view .LVU74
 271 0014 6843     		muls	r0, r5, r0
 272              	.LVL15:
  24:main.c        **** }
 273              		.loc 1 24 12 view .LVU75
 274 0016 FFF7FEFF 		bl	montgomery_reduce
 275              	.LVL16:
 276              	.LBE19:
 277              	.LBE18:
  32:main.c        ****     r[0] += fqmul(a[0], b[0]);
 278              		.loc 1 32 11 view .LVU76
 279 001a 2080     		strh	r0, [r4]	@ movhi
 280              	.LBB21:
 281              	.LBB22:
  24:main.c        **** }
 282              		.loc 1 24 12 view .LVU77
 283 001c 3388     		ldrh	r3, [r6]
 284              	.LBE22:
 285              	.LBE21:
 286              	.LBB24:
 287              	.LBB20:
 288 001e 0546     		mov	r5, r0
 289              	.LVL17:
  24:main.c        **** }
 290              		.loc 1 24 12 view .LVU78
 291              	.LBE20:
 292              	.LBE24:
  33:main.c        ****     r[1]  = fqmul(a[0], b[1]);
 293              		.loc 1 33 5 is_stmt 1 view .LVU79
 294              	.LBB25:
 295              	.LBI21:
  23:main.c        ****     return montgomery_reduce((int32_t)a*b);
 296              		.loc 1 23 16 view .LVU80
 297              	.LBB23:
  24:main.c        **** }
 298              		.loc 1 24 5 view .LVU81
  24:main.c        **** }
 299              		.loc 1 24 12 is_stmt 0 view .LVU82
 300 0020 0888     		ldrh	r0, [r1]
 301 0022 10FB03F0 		smulbb	r0, r0, r3
 302 0026 FFF7FEFF 		bl	montgomery_reduce
 303              	.LVL18:
  24:main.c        **** }
 304              		.loc 1 24 12 view .LVU83
 305              	.LBE23:
 306              	.LBE25:
  33:main.c        ****     r[1]  = fqmul(a[0], b[1]);
 307              		.loc 1 33 10 view .LVU84
 308 002a 0544     		add	r5, r5, r0
 309 002c 2580     		strh	r5, [r4]	@ movhi
  34:main.c        ****     r[1] += fqmul(a[1], b[0]);
 310              		.loc 1 34 5 is_stmt 1 view .LVU85
 311              	.LVL19:
 312              	.LBB26:
 313              	.LBI26:
  23:main.c        ****     return montgomery_reduce((int32_t)a*b);
 314              		.loc 1 23 16 view .LVU86
 315              	.LBB27:
  24:main.c        **** }
 316              		.loc 1 24 5 view .LVU87
  24:main.c        **** }
 317              		.loc 1 24 12 is_stmt 0 view .LVU88
 318 002e 7388     		ldrh	r3, [r6, #2]
 319 0030 0888     		ldrh	r0, [r1]
 320 0032 10FB03F0 		smulbb	r0, r0, r3
 321 0036 FFF7FEFF 		bl	montgomery_reduce
 322              	.LVL20:
  24:main.c        **** }
 323              		.loc 1 24 12 view .LVU89
 324              	.LBE27:
 325              	.LBE26:
  34:main.c        ****     r[1] += fqmul(a[1], b[0]);
 326              		.loc 1 34 11 view .LVU90
 327 003a 6080     		strh	r0, [r4, #2]	@ movhi
 328              	.LBB29:
 329              	.LBB30:
  24:main.c        **** }
 330              		.loc 1 24 12 view .LVU91
 331 003c 4B88     		ldrh	r3, [r1, #2]
 332              	.LBE30:
 333              	.LBE29:
 334              	.LBB32:
 335              	.LBB28:
 336 003e 0546     		mov	r5, r0
  24:main.c        **** }
 337              		.loc 1 24 12 view .LVU92
 338              	.LBE28:
 339              	.LBE32:
  35:main.c        **** }
 340              		.loc 1 35 5 is_stmt 1 view .LVU93
 341              	.LVL21:
 342              	.LBB33:
 343              	.LBI29:
  23:main.c        ****     return montgomery_reduce((int32_t)a*b);
 344              		.loc 1 23 16 view .LVU94
 345              	.LBB31:
  24:main.c        **** }
 346              		.loc 1 24 5 view .LVU95
  24:main.c        **** }
 347              		.loc 1 24 12 is_stmt 0 view .LVU96
 348 0040 3088     		ldrh	r0, [r6]
 349 0042 10FB03F0 		smulbb	r0, r0, r3
 350 0046 FFF7FEFF 		bl	montgomery_reduce
 351              	.LVL22:
  24:main.c        **** }
 352              		.loc 1 24 12 view .LVU97
 353              	.LBE31:
 354              	.LBE33:
  35:main.c        **** }
 355              		.loc 1 35 10 view .LVU98
 356 004a 0544     		add	r5, r5, r0
 357 004c 6580     		strh	r5, [r4, #2]	@ movhi
  36:main.c        **** 
 358              		.loc 1 36 1 view .LVU99
 359 004e 70BD     		pop	{r4, r5, r6, pc}
  36:main.c        **** 
 360              		.loc 1 36 1 view .LVU100
 361              		.cfi_endproc
 362              	.LFE2:
 364              		.section	.text.crypto_main,"ax",%progbits
 365              		.align	1
 366              		.global	crypto_main
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu softvfp
 372              	crypto_main:
 373              	.LVL23:
 374              	.LFB5:
  63:main.c        **** 
  64:main.c        **** 
  65:main.c        **** uint8_t crypto_main(uint8_t* text_in_buf, uint8_t len)
  66:main.c        **** {
 375              		.loc 1 66 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 16
 378              		@ frame_needed = 0, uses_anonymous_args = 0
  67:main.c        **** 
  68:main.c        ****     // 4바이트 값을 넣어줘야 함
  69:main.c        ****     int16_t b[2];
 379              		.loc 1 69 5 view .LVU102
  70:main.c        ****     int16_t r[2];
 380              		.loc 1 70 5 view .LVU103
  71:main.c        ****     int16_t zeta = -1103;
 381              		.loc 1 71 5 view .LVU104
  72:main.c        ****     int8_t check[4];
 382              		.loc 1 72 5 view .LVU105
  73:main.c        **** 
  74:main.c        ****     for(int i=0;i<4;i++){
 383              		.loc 1 74 5 view .LVU106
 384              	.LBB34:
 385              		.loc 1 74 9 view .LVU107
 386              		.loc 1 74 17 view .LVU108
 387              	.LBE34:
  66:main.c        **** 
 388              		.loc 1 66 1 is_stmt 0 view .LVU109
 389 0000 30B5     		push	{r4, r5, lr}
 390              	.LCFI5:
 391              		.cfi_def_cfa_offset 12
 392              		.cfi_offset 4, -12
 393              		.cfi_offset 5, -8
 394              		.cfi_offset 14, -4
 395 0002 85B0     		sub	sp, sp, #20
 396              	.LCFI6:
 397              		.cfi_def_cfa_offset 32
 398 0004 03AA     		add	r2, sp, #12
 399 0006 431E     		subs	r3, r0, #1
 400 0008 C11C     		adds	r1, r0, #3
 401              	.LVL24:
  66:main.c        **** 
 402              		.loc 1 66 1 view .LVU110
 403 000a 1446     		mov	r4, r2
 404              	.LVL25:
 405              	.L10:
 406              	.LBB35:
  75:main.c        ****         check[i] = text_in_buf[i];
 407              		.loc 1 75 9 is_stmt 1 discriminator 3 view .LVU111
 408              		.loc 1 75 18 is_stmt 0 discriminator 3 view .LVU112
 409 000c 13F8015F 		ldrb	r5, [r3, #1]!	@ zero_extendqisi2
 410 0010 02F8015B 		strb	r5, [r2], #1
  74:main.c        ****         check[i] = text_in_buf[i];
 411              		.loc 1 74 21 is_stmt 1 discriminator 3 view .LVU113
  74:main.c        ****         check[i] = text_in_buf[i];
 412              		.loc 1 74 17 discriminator 3 view .LVU114
  74:main.c        ****         check[i] = text_in_buf[i];
 413              		.loc 1 74 5 is_stmt 0 discriminator 3 view .LVU115
 414 0014 8B42     		cmp	r3, r1
 415 0016 F9D1     		bne	.L10
 416              	.LBE35:
  76:main.c        ****     }
  77:main.c        **** 
  78:main.c        ****     b[0] = (((int16_t)text_in_buf[0]) << 8) | ((int16_t)(text_in_buf[1]));
 417              		.loc 1 78 5 is_stmt 1 view .LVU116
 418              		.loc 1 78 10 is_stmt 0 view .LVU117
 419 0018 0388     		ldrh	r3, [r0]	@ unaligned
 420 001a 5BBA     		rev16	r3, r3
 421 001c ADF80430 		strh	r3, [sp, #4]	@ movhi
  79:main.c        ****     b[1] = (((int16_t)text_in_buf[2]) << 8) | ((int16_t)(text_in_buf[3]));
 422              		.loc 1 79 5 is_stmt 1 view .LVU118
 423              		.loc 1 79 10 is_stmt 0 view .LVU119
 424 0020 4388     		ldrh	r3, [r0, #2]	@ unaligned
 425 0022 5BBA     		rev16	r3, r3
 426 0024 ADF80630 		strh	r3, [sp, #6]	@ movhi
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        ****     trigger_high();
 427              		.loc 1 82 5 is_stmt 1 view .LVU120
 428 0028 FFF7FEFF 		bl	trigger_high
 429              	.LVL26:
  83:main.c        ****     basemul(r, a, b, zeta);
 430              		.loc 1 83 5 view .LVU121
 431 002c 074B     		ldr	r3, .L12
 432 002e 0849     		ldr	r1, .L12+4
 433 0030 01AA     		add	r2, sp, #4
 434 0032 02A8     		add	r0, sp, #8
 435 0034 FFF7FEFF 		bl	basemul
 436              	.LVL27:
  84:main.c        ****     trigger_low();
 437              		.loc 1 84 5 view .LVU122
 438 0038 FFF7FEFF 		bl	trigger_low
 439              	.LVL28:
  85:main.c        **** 
  86:main.c        ****     simpleserial_put('r', 4, check);
 440              		.loc 1 86 5 view .LVU123
 441 003c 2246     		mov	r2, r4
 442 003e 0421     		movs	r1, #4
 443 0040 7220     		movs	r0, #114
 444 0042 FFF7FEFF 		bl	simpleserial_put
 445              	.LVL29:
  87:main.c        **** 
  88:main.c        **** 	return 0x00;
 446              		.loc 1 88 2 view .LVU124
  89:main.c        **** }
 447              		.loc 1 89 1 is_stmt 0 view .LVU125
 448 0046 0020     		movs	r0, #0
 449 0048 05B0     		add	sp, sp, #20
 450              	.LCFI7:
 451              		.cfi_def_cfa_offset 12
 452              		@ sp needed
 453 004a 30BD     		pop	{r4, r5, pc}
 454              	.L13:
 455              		.align	2
 456              	.L12:
 457 004c B1FBFFFF 		.word	-1103
 458 0050 00000000 		.word	.LANCHOR0
 459              		.cfi_endproc
 460              	.LFE5:
 462              		.section	.text.startup.main,"ax",%progbits
 463              		.align	1
 464              		.global	main
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 468              		.fpu softvfp
 470              	main:
 471              	.LFB6:
  90:main.c        **** 
  91:main.c        **** int main(void)
  92:main.c        **** {
 472              		.loc 1 92 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ Volatile: function does not return.
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
  93:main.c        ****     platform_init();
 477              		.loc 1 93 5 view .LVU127
  92:main.c        ****     platform_init();
 478              		.loc 1 92 1 is_stmt 0 view .LVU128
 479 0000 08B5     		push	{r3, lr}
 480              	.LCFI8:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 3, -8
 483              		.cfi_offset 14, -4
 484              		.loc 1 93 5 view .LVU129
 485 0002 FFF7FEFF 		bl	platform_init
 486              	.LVL30:
  94:main.c        **** 	init_uart();
 487              		.loc 1 94 2 is_stmt 1 view .LVU130
 488 0006 FFF7FEFF 		bl	init_uart
 489              	.LVL31:
  95:main.c        **** 	trigger_setup();
 490              		.loc 1 95 2 view .LVU131
 491 000a FFF7FEFF 		bl	trigger_setup
 492              	.LVL32:
  96:main.c        **** 
  97:main.c        ****     //int16_t r[2], const int16_t a[2], const int16_t b[2], int16_t zeta
  98:main.c        ****  	/* Uncomment this to get a HELLO message for debug */
  99:main.c        **** 	/*
 100:main.c        **** 	putch('h');
 101:main.c        **** 	putch('e');
 102:main.c        **** 	putch('l');
 103:main.c        **** 	putch('l');
 104:main.c        **** 	putch('o');
 105:main.c        **** 	putch('\n');
 106:main.c        **** 	*/
 107:main.c        **** 
 108:main.c        **** 	simpleserial_init();  // 'v': check_version, 'y': ss_num_commands, 'w': ss_get_commands
 493              		.loc 1 108 2 view .LVU132
 494 000e FFF7FEFF 		bl	simpleserial_init
 495              	.LVL33:
 109:main.c        **** 	
 110:main.c        ****     //
 111:main.c        ****     simpleserial_addcmd('p', 4, crypto_main);
 496              		.loc 1 111 5 view .LVU133
 497 0012 094A     		ldr	r2, .L16
 498 0014 0421     		movs	r1, #4
 499 0016 7020     		movs	r0, #112
 500 0018 FFF7FEFF 		bl	simpleserial_addcmd
 501              	.LVL34:
 112:main.c        ****     simpleserial_addcmd('k', 4, set_key);
 502              		.loc 1 112 5 view .LVU134
 503 001c 074A     		ldr	r2, .L16+4
 504 001e 0421     		movs	r1, #4
 505 0020 6B20     		movs	r0, #107
 506 0022 FFF7FEFF 		bl	simpleserial_addcmd
 507              	.LVL35:
 113:main.c        ****     simpleserial_addcmd('c', 0, check_key);
 508              		.loc 1 113 5 view .LVU135
 509 0026 064A     		ldr	r2, .L16+8
 510 0028 0021     		movs	r1, #0
 511 002a 6320     		movs	r0, #99
 512 002c FFF7FEFF 		bl	simpleserial_addcmd
 513              	.LVL36:
 514              	.L15:
 114:main.c        **** 
 115:main.c        **** 	while(1)
 515              		.loc 1 115 2 discriminator 1 view .LVU136
 116:main.c        **** 		simpleserial_get();
 516              		.loc 1 116 3 discriminator 1 view .LVU137
 517 0030 FFF7FEFF 		bl	simpleserial_get
 518              	.LVL37:
 115:main.c        **** 		simpleserial_get();
 519              		.loc 1 115 7 discriminator 1 view .LVU138
 520 0034 FCE7     		b	.L15
 521              	.L17:
 522 0036 00BF     		.align	2
 523              	.L16:
 524 0038 00000000 		.word	crypto_main
 525 003c 00000000 		.word	set_key
 526 0040 00000000 		.word	check_key
 527              		.cfi_endproc
 528              	.LFE6:
 530              		.global	a
 531              		.bss
 532              		.align	1
 533              		.set	.LANCHOR0,. + 0
 536              	a:
 537 0000 00000000 		.space	4
 538              		.text
 539              	.Letext0:
 540              		.file 2 "c:\\users\\lee\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\gcc-arm-none-eabi-10-2020-
 541              		.file 3 "c:\\users\\lee\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\gcc-arm-none-eabi-10-2020-
 542              		.file 4 "../base/./hal/hal.h"
 543              		.file 5 "../base/./hal/stm32f3/stm32f3_hal.h"
 544              		.file 6 "../base/./simpleserial/simpleserial.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:16     .text.set_key:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:24     .text.set_key:00000000 set_key
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:100    .text.set_key:00000040 $d
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:105    .text.check_key:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:112    .text.check_key:00000000 check_key
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:167    .text.check_key:00000034 $d
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:172    .text.montgomery_reduce:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:179    .text.montgomery_reduce:00000000 montgomery_reduce
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:209    .text.basemul:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:216    .text.basemul:00000000 basemul
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:365    .text.crypto_main:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:372    .text.crypto_main:00000000 crypto_main
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:457    .text.crypto_main:0000004c $d
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:463    .text.startup.main:00000000 $t
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:470    .text.startup.main:00000000 main
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:524    .text.startup.main:00000038 $d
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:536    .bss:00000000 a
C:\Users\Lee\AppData\Local\Temp\ccJrwQjd.s:532    .bss:00000000 $d

UNDEFINED SYMBOLS
simpleserial_put
trigger_high
trigger_low
platform_init
init_uart
trigger_setup
simpleserial_init
simpleserial_addcmd
simpleserial_get
